---
const links = [
  { text: "Process", href: "/#process" },
  { text: "Assessment", href: "/#assessment" },
  { text: "Articles", href: "/articles" },
  { text: "Contact", href: "/#contact" }
];
---
<nav class="fixed w-full z-50 bg-white/80 backdrop-blur-md border-b border-light-gray">
  <div class="container mx-auto">
    <div class="flex items-center justify-between h-20">
      <a href="/" class="text-xl font-medium">
        amotivv<span class="text-primary">.</span>
      </a>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center gap-8">
        {links.map(link => (
          <a href={link.href} class="text-dark-gray hover:text-primary transition-colors">
            {link.text}
          </a>
        ))}
        <a href="/#assessment" class="ml-4 px-6 py-2 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors">
          Get Started
        </a>
      </div>

      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button" 
        class="md:hidden p-2 rounded-lg hover:bg-gray-100 transition-colors"
        aria-label="Toggle mobile menu"
      >
        <svg 
          id="menu-icon"
          class="w-6 h-6 text-dark-gray"
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24"
        >
          <path 
            stroke-linecap="round" 
            stroke-linejoin="round" 
            stroke-width="2" 
            d="M4 6h16M4 12h16M4 18h16"
          />
        </svg>
        <svg 
          id="close-icon"
          class="hidden w-6 h-6 text-dark-gray"
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24"
        >
          <path 
            stroke-linecap="round" 
            stroke-linejoin="round" 
            stroke-width="2" 
            d="M6 18L18 6M6 6l12 12"
          />
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div 
      id="mobile-menu" 
      class="hidden md:hidden absolute left-0 right-0 top-[80px] bg-white border-b border-light-gray"
    >
      <div class="container mx-auto py-6 space-y-4">
        {links.map(link => (
          <a 
            href={link.href} 
            class="block text-dark-gray hover:text-primary transition-colors py-2"
          >
            {link.text}
          </a>
        ))}
        <a 
          href="#contact" 
          class="block px-6 py-2 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors text-center mt-6"
        >
          Get Started
        </a>
      </div>
    </div>
  </div>
</nav>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');
  let isMenuOpen = false;

  function toggleMenu() {
    isMenuOpen = !isMenuOpen;
    mobileMenu.classList.toggle('hidden');
    menuIcon.classList.toggle('hidden');
    closeIcon.classList.toggle('hidden');
  }

  // Toggle menu on button click
  mobileMenuButton.addEventListener('click', toggleMenu);

  // Close menu when clicking a link
  mobileMenu.querySelectorAll('a').forEach(link => {
    link.addEventListener('click', () => {
      if (isMenuOpen) {
        toggleMenu();
      }
    });
  });

  // Close menu when clicking outside
  document.addEventListener('click', (event) => {
    const target = event.target as Node;
    const isClickInsideMenu = mobileMenu.contains(target);
    const isClickOnButton = mobileMenuButton.contains(target);
    
    if (isMenuOpen && !isClickInsideMenu && !isClickOnButton) {
      toggleMenu();
    }
  });

  // Close menu on window resize if it's open
  window.addEventListener('resize', () => {
    if (isMenuOpen && window.innerWidth >= 768) {
      toggleMenu();
    }
  });
</script>